load(
    "@io_tweag_rules_haskell//haskell:haskell.bzl",
    "haskell_import",
    "haskell_library",
    "haskell_test",
)
load("@ai_formation_hazel//:hazel.bzl", "hazel_library")

haskell_packages = [
    "base",
    "bytestring",
    "template-haskell",
]

compiler_packages = [
    "base",
    "bytestring",
    "containers",
    "ghc",
    "bazel-runfiles",
    "filepath",
    "lens",
    "mtl",
    "prettyprinter",
    "serialise",
    "template-haskell",
    "th-abstraction",
    "text",
    "transformers",
]

tutorial_packages = [
    "base",
    "bytestring",
    "template-haskell",
]

test_packages = [
    "base",
    "bazel-runfiles",
    "bytestring",
    "filepath",
    "prettyprinter",
    "mtl",
    "template-haskell",
    "tasty",
]

[
    haskell_import(name = name)
    for name in (list(depset(compiler_packages + haskell_packages + test_packages + tutorial_packages)))
]

haskell_library(
    name = "plutus-tx-compiler",
    srcs = glob([
        "compiler/**/*.hs",
        "compiler/**/*.hs-boot",
    ]),
    src_strip_prefix = "compiler",
    compiler_flags = [
        "-XExplicitForAll",
        "-XScopedTypeVariables",
        "-XDeriveGeneric",
        "-XStandaloneDeriving",
        "-XDeriveLift",
        "-XGeneralizedNewtypeDeriving",
        "-XDeriveFunctor",
        "-XDeriveFoldable",
        "-XDeriveTraversable",
    ],
    visibility = ["//visibility:public"],
    deps = [hazel_library(name) for name in compiler_packages] + [
        "//language-plutus-core:language-plutus-core",
        "//plutus-ir:plutus-ir",
    ],
)

haskell_library(
    name = "plutus-tx",
    srcs = glob([
        "src/**/*.hs",
    ]),
    compiler_flags = [
        "-XExplicitForAll",
        "-XScopedTypeVariables",
        "-XDeriveGeneric",
        "-XStandaloneDeriving",
        "-XDeriveLift",
        "-XGeneralizedNewtypeDeriving",
        "-XDeriveFunctor",
        "-XDeriveFoldable",
        "-XDeriveTraversable",
    ],
    visibility = ["//visibility:public"],
    src_strip_prefix = "src",
    deps = [hazel_library(name) for name in haskell_packages] + [
        "//language-plutus-core:language-plutus-core",
        "//plutus-core-interpreter:plutus-core-interpreter",
        ":plutus-tx-compiler",
    ],
)

# TODO: this is some sort of magic markdown thing
# haskell_library(
#     name = "plutus-tx-tutorial",
#     srcs = glob([
#         "tutorial/**/*.hs",
#     ]),
#     src_strip_prefix = "tutorial",
#     compiler_flags = [
#         "-XExplicitForAll",
#         "-XScopedTypeVariables",
#         "-XDeriveGeneric",
#         "-XStandaloneDeriving",
#         "-XDeriveLift",
#         "-XGeneralizedNewtypeDeriving",
#         "-XDeriveFunctor",
#         "-XDeriveFoldable",
#         "-XDeriveTraversable",
#     ],
#     visibility = ["//visibility:public"],
#     deps = [hazel_library(name) for name in haskell_packages] + [
#         "//language-plutus-core:language-plutus-core",
#         ":plutus-tx",
#     ],
# )

haskell_test(
    name = "plutus-tx-test",
    size = "small",
    srcs = glob([
        "test/**/*.hs",
    ]),
    src_strip_prefix = "test",
    data = glob([
        "test/**/*.golden",
    ]),
    visibility = ["//visibility:public"],
    deps = [hazel_library(name) for name in test_packages] + [
        "//language-plutus-core:language-plutus-core",
        "//plutus-ir:plutus-ir",
        ":plutus-tx",
        ":plutus-tx-compiler",
    ],
)

sh_test(
    name = "hlint",
    size = "small",
    srcs = ["@hlint//:bin/run.sh"],
    args = ["."],
    deps = ["//:hlint_lib"],
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
)

sh_test(
    name = "stylish",
    size = "small",
    srcs = ["@stylish_haskell//:bin/run.sh"],
    args = ["plutus-tx"],
    deps = ["//:stylish_haskell_lib"],
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
)
