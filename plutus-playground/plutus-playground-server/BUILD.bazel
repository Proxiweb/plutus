load(
    "@io_tweag_rules_haskell//haskell:haskell.bzl",
    "haskell_import",
    "haskell_library",
    "haskell_test",
    "haskell_binary",
)
load("@ai_formation_hazel//:hazel.bzl", "hazel_library")

haskell_packages = [
    "aeson",
    "aeson-casing",
    "base",
    "bytestring",
    "containers",
    "cookie",
    "directory",
    "exceptions",
    "file-embed",
    "filepath",
    "generics-sop",
    "http-conduit",
    "http-client-tls",
    "http-client",
    "http-types",
    "jwt",
    "lens",
    "monad-logger",
    "mtl",
    "transformers",
    "newtype-generics",
    "process",
    "regex-compat",
    "servant",
    "servant-purescript",
    "servant-client",
    "servant-client-core",
    "servant-server",
    "swagger2",
    "temporary",
    "text",
    "time",
]

test_packages = [
    "bazel-runfiles",
    "QuickCheck",
    "aeson",
    "base",
    "bytestring",
    "hspec",
    "insert-ordered-containers",
    "mtl",
    "swagger2",
    "text",
    "transformers",
]

binary_packages = [
    "aeson",
    "base",
    "bytestring",
    "containers",
    "data-default-class",
    "filepath",
    "gitrev",
    "http-types",
    "lens",
    "monad-logger",
    "mtl",
    "optparse-applicative",
    "purescript-bridge",
    "servant",
    "servant-purescript",
    "servant-foreign",
    "servant-server",
    "text",
    "transformers",
    "wai",
    "wai-cors",
    "wai-extra",
    "warp",
    "yaml",
]

[
    haskell_import(name = name)
    for name in (list(depset(haskell_packages + test_packages + binary_packages)))
]

haskell_library(
    name = "plutus-playground-server",
    srcs = glob([
        "src/**/*.hs",
        "src/**/*.hs-boot",
    ]),
    compiler_flags = [
        "-XExplicitForAll",
        "-XScopedTypeVariables",
        "-XDeriveGeneric",
        "-XStandaloneDeriving",
        "-XDeriveLift",
        "-XGeneralizedNewtypeDeriving",
        "-XDeriveFunctor",
        "-XDeriveFoldable",
        "-XDeriveTraversable",
        "-XTemplateHaskell",
        "-XDataKinds",
    ],
    visibility = ["//visibility:public"],
    src_strip_prefix = "src",
    deps = [hazel_library(name) for name in haskell_packages] + [
        "//plutus-playground/plutus-playground-lib:plutus-playground-lib",
        "//wallet-api:wallet-api",
        "//plutus-tx:plutus-tx",
        "//plutus-tx:plutus-tx-compiler",
    ],
)

haskell_binary(
    name = "plutus-playground-server-app",
    srcs = glob([
        "app/*.hs",
    ]),
    src_strip_prefix = "app",
    visibility = ["//visibility:public"],
    deps = [hazel_library(name) for name in binary_packages] + [
        ":plutus-playground-server",
        "//plutus-playground/plutus-playground-lib:plutus-playground-lib",
        "//wallet-api:wallet-api",
    ],
)

haskell_test(
    name = "plutus-playground-server-test",
    size = "small",
    srcs = glob([
        "test/**/*.hs",
    ]),
    src_strip_prefix = "test",
    data = glob([
      "test/**/*",
    ]) + [":plutus-playground-server@runghc", ":plutus-playground-server"],
    visibility = ["//visibility:public"],
    deps = [hazel_library(name) for name in test_packages] + [
        ":plutus-playground-server",
        "//plutus-playground/plutus-playground-lib:plutus-playground-lib",
        "//wallet-api:wallet-api",
    ],
)

sh_test(
    name = "hlint",
    size = "small",
    srcs = ["@hlint//:bin/run.sh"],
    args = ["."],
    deps = ["//:hlint_lib"],
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
)

sh_test(
    name = "stylish",
    size = "small",
    srcs = ["@stylish_haskell//:bin/run.sh"],
    args = ["plutus-playground/plutus-playground-server"],
    deps = ["//:stylish_haskell_lib"],
    data = glob(["**/*.hs"], exclude = ["**/.stack-work/**"]),
)
